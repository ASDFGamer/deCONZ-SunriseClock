Model:
    soll keine Ahnung über datasource haben, da dies nicht nach schichtenmodel wäre
        -> RemoteDatasourceChooser Class?
        -> schwierig umzusetzen, besser keine feste Verbindung zu datasource, sondern z.B. ein String.
        -> richtige Setter nicht mehr request to change
            -> Update wird über repo/Remote Data Source gemacht und auch fehlerhandling
    nur noch BaseLight
        was ist der Vorteil von mehreren Klassen?
            -> Filtern kann man auch so
                -> Im Repo wäre eine Methode um nach Interfaces zu filtern
            -> Wenn BaseLight alle Interfaces implementiert kann man gegen die Interfaces programmieren und hat nur die unterstützten Methoden
                -> Interfaces für alle Kombis erstellen
            -> mir fällt nichts mehr ein, kann aber einen wichtigen Vorteil geben den ich übersehen hab.
        arbeit mit nur einem DAO viel einfacher
            -> insgesamt fällt viel komplexität weg

DAO:
    @RawQuery Benutzen um eine query dynamisch zu erstellen, z.B. mit unterschiedlichen Where Parametern
        https://stackoverflow.com/a/51911228

